{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n// import React, { Component } from 'react';\n// class Index extends Component {\n//     state = {  }\n//     render() {\n//         return ( <h1> This is front end</h1> );\n//     }\n// }\n// export default Index;\nimport React from \"react\";\nimport axios, { post } from \"axios\";\n\nvar BulkUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BulkUpload, _React$Component);\n\n  function BulkUpload(props) {\n    var _this;\n\n    _classCallCheck(this, BulkUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BulkUpload).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"downloadBulkUploadTemplete\", function () {\n      fetch(\"/excel.xlsx\").then(function (response) {\n        response.blob().then(function (blob) {\n          var url = window.URL.createObjectURL(blob);\n          var a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"muhalik bulk-upload templete.xlsx\";\n          a.click();\n        });\n      });\n    });\n\n    _this.state = {\n      file: null\n    };\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.fileUpload = _this.fileUpload.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BulkUpload, [{\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(e) {\n      e.preventDefault(); // Stop form submit\n\n      this.fileUpload(this.state.file).then(function (response) {\n        console.log(response.data);\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        file: e.target.files[0]\n      });\n    }\n  }, {\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var url = \"http://localhost:5000/api/products/bulk_upload\";\n      var formData = new FormData();\n      formData.append(\"file\", file);\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      }; // return post(url, formData, config)\n\n      this.http.post(url, formData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"row\", null, __jsx(\"form\", {\n        onSubmit: this.onFormSubmit\n      }, __jsx(\"div\", null, __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.onChange\n      })), __jsx(\"div\", null, __jsx(\"button\", {\n        variant: \"primary\",\n        size: \"md\",\n        active: true,\n        type: \"submit\"\n      }, \"Upload\")))));\n    }\n  }]);\n\n  return BulkUpload;\n}(React.Component);\n\nexport default BulkUpload;","map":{"version":3,"sources":["C:/Users/User/Desktop/FYP/muhalik-backend/pages/index.js"],"names":["React","axios","post","BulkUpload","props","fetch","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","state","file","onFormSubmit","bind","onChange","fileUpload","e","preventDefault","console","log","data","setState","target","files","formData","FormData","append","config","headers","http","Component"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;IACMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,iFA+BU,YAAM;AACjCC,MAAAA,KAAK,CAAC,aAAD,CAAL,CAAqBC,IAArB,CAA0B,UAAAC,QAAQ,EAAI;AACpCA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAE,IAAI,EAAI;AAC3B,cAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAV;AACA,cAAIK,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAF,UAAAA,CAAC,CAACG,IAAF,GAASP,GAAT;AACAI,UAAAA,CAAC,CAACI,QAAF,GAAa,mCAAb;AACAJ,UAAAA,CAAC,CAACK,KAAF;AACD,SAND;AAOD,OARD;AASD,KAzCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AAPiB;AAQlB;;;;iCACYG,C,EAAG;AACdA,MAAAA,CAAC,CAACC,cAAF,GADc,CACM;;AACpB,WAAKF,UAAL,CAAgB,KAAKL,KAAL,CAAWC,IAA3B,EAAiCd,IAAjC,CAAsC,UAAAC,QAAQ,EAAI;AAChDoB,QAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAQ,CAACsB,IAArB;AACD,OAFD;AAGD;;;6BACQJ,C,EAAG;AACV,WAAKK,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEK,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf;AAAR,OAAd;AACD;;;+BACUZ,I,EAAM;AACf,UAAMX,GAAG,GAAG,gDAAZ;AACA,UAAMwB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,IAAxB;AACA,UAAMgB,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf,CAJe,CASf;;AACA,WAAKC,IAAL,CAAUpC,IAAV,CAAeO,GAAf,EAAoBwB,QAApB;AACD;;;6BAaQ;AACP,aACE,mBACE,mBACE;AAAM,QAAA,QAAQ,EAAE,KAAKZ;AAArB,SACE,mBACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKE;AAAlC,QADF,CADF,EAIE,mBACE;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,IAA/B;AAAoC,QAAA,MAAM,MAA1C;AAA2C,QAAA,IAAI,EAAC;AAAhD,kBADF,CAJF,CADF,CADF,CADF;AAgBD;;;;EA5DsBvB,KAAK,CAACuC,S;;AA8D/B,eAAepC,UAAf","sourcesContent":["// import React, { Component } from 'react';\r\n// class Index extends Component {\r\n//     state = {  }\r\n//     render() {\r\n//         return ( <h1> This is front end</h1> );\r\n//     }\r\n// }\r\n\r\n// export default Index;\r\n\r\nimport React from \"react\";\r\nimport axios, { post } from \"axios\";\r\nclass BulkUpload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.fileUpload = this.fileUpload.bind(this);\r\n  }\r\n  onFormSubmit(e) {\r\n    e.preventDefault(); // Stop form submit\r\n    this.fileUpload(this.state.file).then(response => {\r\n      console.log(response.data);\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n  fileUpload(file) {\r\n    const url = \"http://localhost:5000/api/products/bulk_upload\";\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\"\r\n      }\r\n    };\r\n    // return post(url, formData, config)\r\n    this.http.post(url, formData);\r\n  }\r\n\r\n  downloadBulkUploadTemplete = () => {\r\n    fetch(\"/excel.xlsx\").then(response => {\r\n      response.blob().then(blob => {\r\n        let url = window.URL.createObjectURL(blob);\r\n        let a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"muhalik bulk-upload templete.xlsx\";\r\n        a.click();\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <row>\r\n          <form onSubmit={this.onFormSubmit}>\r\n            <div>\r\n              <input type=\"file\" onChange={this.onChange} />\r\n            </div>\r\n            <div>\r\n              <button variant=\"primary\" size=\"md\" active type=\"submit\">\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BulkUpload;\r\n"]},"metadata":{},"sourceType":"module"}