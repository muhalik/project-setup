{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { Component } from 'react';\n// class Index extends Component {\n//     state = {  }\n//     render() { \n//         return ( <h1> This is front end</h1> );\n//     }\n// }\n// export default Index;\nimport React from 'react';\n\nclass BulkUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"downloadBulkUploadTemplete\", () => {\n      fetch('/excel.xlsx').then(response => {\n        response.blob().then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = 'muhalik bulk-upload templete.xlsx';\n          a.click();\n        });\n      });\n    });\n\n    this.state = {\n      file: null\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault(); // Stop form submit\n\n    this.fileUpload(this.state.file).then(response => {\n      console.log(response.data);\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  fileUpload(file) {\n    const url = 'http://example.com/file-upload';\n    const formData = new FormData();\n    formData.append('file', file);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return post(url, formData, config);\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"row\", null, __jsx(\"form\", {\n      onSubmit: this.onFormSubmit\n    }, __jsx(\"div\", {\n      style: styles.browseBtnDiv\n    }, __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onChange\n    })), __jsx(\"div\", {\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"button\", {\n      variant: \"primary\",\n      size: \"md\",\n      active: true,\n      type: \"submit\"\n    }, \"Upload\")))));\n  }\n\n}\n\nexport default BulkUpload;","map":{"version":3,"sources":["C:/Users/User/Desktop/FYP/muhalik-backend/pages/index.js"],"names":["React","BulkUpload","Component","constructor","props","fetch","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","state","file","onFormSubmit","bind","onChange","fileUpload","e","preventDefault","console","log","data","setState","target","files","formData","FormData","append","config","headers","post","render","styles","browseBtnDiv","width"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wDA8BU,MAAM;AAC/BC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACdA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,cAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAV;AACA,cAAIK,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAF,UAAAA,CAAC,CAACG,IAAF,GAASP,GAAT;AACAI,UAAAA,CAAC,CAACI,QAAF,GAAa,mCAAb;AACAJ,UAAAA,CAAC,CAACK,KAAF;AACH,SAND;AAOH,OATL;AAUH,KAzCkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDD,EAAAA,YAAY,CAACI,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF,GADY,CACO;;AACnB,SAAKF,UAAL,CAAgB,KAAKL,KAAL,CAAWC,IAA3B,EAAiCd,IAAjC,CAAuCC,QAAD,IAAc;AAChDoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAQ,CAACsB,IAArB;AACH,KAFD;AAGH;;AACDN,EAAAA,QAAQ,CAACE,CAAD,EAAI;AACR,SAAKK,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAEK,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf;AAAR,KAAd;AACH;;AACDR,EAAAA,UAAU,CAACJ,IAAD,EAAO;AACb,UAAMX,GAAG,GAAG,gCAAZ;AACA,UAAMwB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,IAAxB;AACA,UAAMgB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,WAAOC,IAAI,CAAC7B,GAAD,EAAMwB,QAAN,EAAgBG,MAAhB,CAAX;AACH;;AAcDG,EAAAA,MAAM,GAAG;AACL,WACI,mBACI,mBACY;AAAM,MAAA,QAAQ,EAAE,KAAKlB;AAArB,OACI;AAAK,MAAA,KAAK,EAAEmB,MAAM,CAACC;AAAnB,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKlB;AAAlC,MADJ,CADJ,EAII;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAE;AAAT;AAAZ,OACI;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,IAA/B;AAAoC,MAAA,MAAM,MAA1C;AAA2C,MAAA,IAAI,EAAC;AAAhD,gBADJ,CAJJ,CADZ,CADJ,CADJ;AAgBH;;AA7DoC;;AA+DzC,eAAezC,UAAf","sourcesContent":["// import React, { Component } from 'react';\r\n// class Index extends Component {\r\n//     state = {  }\r\n//     render() { \r\n//         return ( <h1> This is front end</h1> );\r\n//     }\r\n// }\r\n \r\n// export default Index;\r\n\r\n\r\n\r\nimport React from 'react'\r\nclass BulkUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null\r\n        }\r\n        this.onFormSubmit = this.onFormSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.fileUpload = this.fileUpload.bind(this)\r\n    }\r\n    onFormSubmit(e) {\r\n        e.preventDefault() // Stop form submit\r\n        this.fileUpload(this.state.file).then((response) => {\r\n            console.log(response.data);\r\n        })\r\n    }\r\n    onChange(e) {\r\n        this.setState({ file: e.target.files[0] })\r\n    }\r\n    fileUpload(file) {\r\n        const url = 'http://example.com/file-upload';\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config)\r\n    }\r\n\r\n    downloadBulkUploadTemplete = () => {\r\n        fetch('/excel.xlsx')\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = 'muhalik bulk-upload templete.xlsx';\r\n                    a.click();\r\n                });\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <row>\r\n                            <form onSubmit={this.onFormSubmit}>\r\n                                <div style={styles.browseBtnDiv}>\r\n                                    <input type=\"file\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div style={{ width: '100%' }}>\r\n                                    <button variant=\"primary\" size=\"md\" active type=\"submit\">\r\n                                        Upload\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                </row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BulkUpload;"]},"metadata":{},"sourceType":"module"}